Introduction to Golang
20 Oct 2020

Denis Kasaniƒç
Software Developer, PDS Tieto
denis.kasanic@tieto.com

* License

Some content of this presentation is drawn from talk [[https://talks.golang.org/2012/concurrency.slide#1][Go concurrency patterns]] by Rob Pike 

* Agenda

- What is Go
- Go types
- Interfaces
- Concurrency mechanisms
- Learning materials

.image images/golang-mascot.png

* Go

- statically type-checked
- compiled
- garbage-collected
- has run-time reflection
- strong suppot for concurrency
- simple
- no generics (yet?)

* Hello world Golang way

.play code/hello-world.go

* Variables

- declaration and initialization

.code code/declaration.go /START LONG/,/END LONG/
or

.code code/declaration.go /START SHORT/,/END SHORT/

* Golang types

basic
  - numeric, boolean, string
  - error (built-in interface) // not so usual

composite
  - pointer
  - array, slice, map
  - struct
  - function
  - channel

abstract
  - interface

* Interfaces

- abstract type
- defined as set of methods
- a value can hold any type that implements these methods
- implemented __implicitly__
- empty interface is implemented by anything

*
.play code/interface.go /START OMIT/,/END OMIT/

* Concurrency mechanisms

* Goroutines
[[https://blog.golang.org/waza-talk][Concurrency is not parallelism!]]

- independently executing function
- very cheap
- not a thread (just behaves like one)

.play code/goroutines.go /START OMIT/,/END OMIT/

* Channels

- connections between concurrent goroutines

.play code/channels.go /START OMIT/,/END OMIT/

* Select

- like switch but case statements refer to communication

.play code/select.go /START OMIT/,/END OMIT/

* Useful learning materials

- [[https://tour.golang.org/welcome/1][Online Tour of Go]]
- [[https://gobyexample.com/][Go by example]]
- [[https://golang.org/doc/effective_go.html][Effective go]]
- [[https://github.com/golang/go/wiki][Go Wiki]]

Selection of articles from Go blog:

- [[https://blog.golang.org/pipelines][Go concurrency patterns]]
- [[https://blog.golang.org/io2013-talk-concurrency][Advanced concurrency patterns]]
- [[https://blog.golang.org/codelab-share][Share Memory By Communicating]]
- [[https://blog.golang.org/error-handling-and-go][Error Handling and Go]]
- [[https://blog.golang.org/go1.13-errors][Working with Errors in Go 1.13]]
- [[https://blog.golang.org/race-detector][Go Race Detector]]
- [[https://blog.golang.org/using-go-modules][Using Go Modules]]
